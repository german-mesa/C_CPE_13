###
# This file configures the project "Piper" pipeline of your project.
# For a reference of the configuration concept and available options, please have a look into its documentation.
#
# The documentation for the most recent pipeline version can always be found at:
#    https://sap.github.io/jenkins-library/
#
# This is a YAML-file. YAML is an indentation-sensitive file format. Please make sure to properly indent changes to it.
###


# Project configuration
general:
  buildTool: "mta"             # or "npm" or "maven"

# Stages configuration
stages:
  Build:
    mavenExecuteStaticCodeChecks: false   # true, if you want to execute static code checks to verify the syntax of your Java code
    npmExecuteLint: true                  # true, if you want to run a lint check that verifies the syntax of your JavaScript code

  Additional Unit Tests:
    karmaExecuteTests: false   # true, if you want to execute the Karma Test Runner (default: false)
    npmExecuteScripts: false   # true, if you want to execute test scripts that are defined in step npmExecuteScripts

  Release:
    cloudFoundryDeploy: true  # true, if you want to deploy to Cloud Foundry. If you set this parameter to true, the CloudFoundryDeploy step is mandatory
    cfApiEndpoint: "https://api.cf.us10.hana.ondemand.com"
    cfOrg: "293475betrial"
    cfSpace: "dev"
    cfAppName: ""
    cfCredentialsId: "cfdeployment"

# Steps configuration
steps:
# Init stage step 
  artifactPrepareVersion:
    versioningType: "cloud_noTag"                                                # or 'cloud', if you want your pipeline to write Git tags. In this case, you need to add the gitHttpsCredentialsId parameter
                                                                                 # or 'library' for maven. In this case, the version needs to be set in the pom.xml file
 
# Build stage step 
  npmExecuteLint:
    failOnError: false                                                           # true, if you want your pipeline to fail, if the lint check reveals any errors

# Test stage step 
  npmExecuteScripts:                                                             # only relevant, if you set the npmExecuteScripts parameter in the Additional Unit Tests stage to true
    runScripts:
        - "test"                                                                 # list of script names in your package.json file to be executed 

# Release stage steps 
  cloudFoundryDeploy:                                                            # only relevant, if you set the cloudFoundryDeploy parameter in the Release stage to true
    mtaDeployParameters: "-f --version-rule ALL"
    
